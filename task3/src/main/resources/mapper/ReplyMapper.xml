<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yl.mapper.ReplyMapper">
  <resultMap id="BaseResultMap" type="com.yl.entity.Reply">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="nick" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="message_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="word" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_at" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="update_at" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="editor" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, nick, message_id, word, create_at, update_at, editor
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reply
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from reply
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yl.entity.Reply">
    insert into reply (id, nick, message_id, 
      word, create_at, update_at, 
      editor)
    values (#{id,jdbcType=BIGINT}, #{nick,jdbcType=VARCHAR}, #{messageId,jdbcType=BIGINT}, 
      #{word,jdbcType=VARCHAR}, #{createAt,jdbcType=BIGINT}, #{updateAt,jdbcType=BIGINT}, 
      #{editor,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yl.entity.Reply">
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="nick != null">
        nick,
      </if>
      <if test="messageId != null">
        message_id,
      </if>
      <if test="word != null">
        word,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="editor != null">
        editor,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="nick != null">
        #{nick,jdbcType=VARCHAR},
      </if>
      <if test="messageId != null">
        #{messageId,jdbcType=BIGINT},
      </if>
      <if test="word != null">
        #{word,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="editor != null">
        #{editor,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yl.entity.Reply">
    update reply
    <set>
      <if test="nick != null">
        nick = #{nick,jdbcType=VARCHAR},
      </if>
      <if test="messageId != null">
        message_id = #{messageId,jdbcType=BIGINT},
      </if>
      <if test="word != null">
        word = #{word,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="editor != null">
        editor = #{editor,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yl.entity.Reply">
    update reply
    set nick = #{nick,jdbcType=VARCHAR},
      message_id = #{messageId,jdbcType=BIGINT},
      word = #{word,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=BIGINT},
      update_at = #{updateAt,jdbcType=BIGINT},
      editor = #{editor,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="getReply"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from reply
    <where>
      <if test="messageId != null">
        message_id = #{messageId,jdbcType=BIGINT}
      </if>
    </where>
  </select>
</mapper>